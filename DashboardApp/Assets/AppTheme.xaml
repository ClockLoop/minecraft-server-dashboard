<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
            xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
            xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
            xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">


    <!-- Player Management Page -->
    <SolidColorBrush x:Key="LightBorderBrush" Color="#D8D8D8" />

    <!-- PlayerTile -->
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <!--<Style x:Key="StandardTabControl" -->
    <!--<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource StandardTabControl}" />-->
    <Style x:Key="DashboardTabControl"
		TargetType="{x:Type TabControl}">
        <Style.Resources>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="#7FFFFFFF"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type TabItem}">
                            <Border x:Name="border"
								Height="40"
								BorderThickness="0,0,0,1"
								Margin="0"
								Padding="0" BorderBrush="#00000000">
                                <Grid>
                                    <Border
										x:Name="PART_Border"
										Background="{TemplateBinding Background}"
										BorderThickness="5,0,0,0"
										BorderBrush="#FF2D5B76"
										Width="160px"
										Padding="0,2"
										Margin="0">
                                        <TextBlock
											FontFamily="Segoe UI"
											FontWeight="Light"
											FontSize="15px"><InlineUIContainer>
												<ContentPresenter
													ContentSource="Header"
													Margin="4" />
											</InlineUIContainer></TextBlock>
                                    </Border>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger  Property="IsSelected"
									Value="True">
                                    <Setter
										TargetName="PART_Border"
										Property="BorderBrush"
										Value="#FF053855" />
                                    <!--<Setter Property="Foreground" Value="White" />-->
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <!--Selected tab highlight-->
                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                <GradientStop Color="#FFDEDEDE" Offset="0" />
                                                <GradientStop Color="White" Offset="1" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="border"
									Value="True">
                                    <Setter Property="Background" Value="#FF5387A5" />
                                    <Setter
										TargetName="PART_Border"
										Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                                <GradientStop Color="Gainsboro" Offset="0" />
                                                <GradientStop Color="White" Offset="0.9" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <!--<Setter Property="Foreground" Value="White" />-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
					TargetType="{x:Type TabControl}">
                    <Grid
						ClipToBounds="True"
						SnapsToDevicePixels="True"
						KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
								x:Name="ColumnDefinition0" />
                            <ColumnDefinition
								Width="0"
								x:Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition
								Height="Auto"
								x:Name="RowDefinition0" />
                            <RowDefinition
								Height="*"
								x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>

                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#004D8B9F" Offset="0.95" />
                                    <GradientStop Color="#FF2D5B76" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Border
							x:Name="HeaderBorder"
							BorderBrush="Black"
							BorderThickness="0"
							CornerRadius="0"
							Margin="0,0,0,0" Background="#00000000">
                            <TabPanel
								IsItemsHost="True"
								x:Name="HeaderPanel"
								Panel.ZIndex="1"
								KeyboardNavigation.TabIndex="1"
								Grid.Column="0"
								Grid.Row="0" />
                        </Border>
                        <Grid
							x:Name="ContentPanel"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Local"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Column="0"
							Grid.Row="1">
                            <Border
								Background="White"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="0"
								Margin="0,0,0,0"
								CornerRadius="0">
                                <ContentPresenter
									Content="{TemplateBinding SelectedContent}"
									ContentTemplate="{TemplateBinding SelectedContentTemplate}"
									ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
									ContentSource="SelectedContent"
									x:Name="PART_SelectedContentHost"
                                    
									Margin="0"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
							Property="TabStripPlacement"
							Value="Bottom">
                            <Setter
								TargetName="HeaderPanel"
								Property="Grid.Row"
								Value="1" />
                            <Setter
								TargetName="ContentPanel"
								Property="Grid.Row"
								Value="0" />
                            <Setter
								TargetName="RowDefinition0"
								Property="Height"
								Value="*" />
                            <Setter
								TargetName="RowDefinition1"
								Property="Height"
								Value="Auto" />
                            <!--<Setter
								TargetName="HeaderBorder"
								Property="FrameworkElement.Margin"
								Value="0,5,0,0" /> -->
                        </Trigger>
                        <Trigger
							Property="TabStripPlacement"
							Value="Left">
                            <Setter
								TargetName="HeaderPanel"
								Property="Grid.Row"
								Value="0" />
                            <Setter
								TargetName="ContentPanel"
								Property="Grid.Row"
								Value="0" />
                            <Setter
								TargetName="HeaderPanel"
								Property="Grid.Column"
								Value="0" />
                            <Setter
								TargetName="ContentPanel"
								Property="Grid.Column"
								Value="1" />
                            <Setter
								TargetName="ColumnDefinition0"
								Property="Width"
								Value="Auto" />
                            <Setter
								TargetName="ColumnDefinition1"
								Property="Width"
								Value="*" />
                            <Setter
								TargetName="RowDefinition0"
								Property="Height"
								Value="*" />
                            <Setter
								TargetName="RowDefinition1"
								Property="Height"
								Value="0" />
                            <!--<Setter
								TargetName="HeaderBorder"
								Property="FrameworkElement.Margin"
								Value="0,0,5,0" />-->
                        </Trigger>
                        <Trigger
							Property="TabStripPlacement"
							Value="Right">
                            <Setter
								TargetName="HeaderPanel"
								Property="Grid.Row"
								Value="0" />
                            <Setter
								TargetName="ContentPanel"
								Property="Grid.Row"
								Value="0" />
                            <Setter
								TargetName="HeaderPanel"
								Property="Grid.Column"
								Value="1" />
                            <Setter
								TargetName="ContentPanel"
								Property="Grid.Column"
								Value="0" />
                            <Setter
								TargetName="ColumnDefinition0"
								Property="Width"
								Value="*" />
                            <Setter
								TargetName="ColumnDefinition1"
								Property="Width"
								Value="Auto" />
                            <Setter
								TargetName="RowDefinition0"
								Property="Height"
								Value="*" />
                            <Setter
								TargetName="RowDefinition1"
								Property="Height"
								Value="0" />
                            <!--<Setter
								TargetName="HeaderBorder"
								Property="FrameworkElement.Margin"
								Value="5,0,0,0" />-->
                        </Trigger>
                        <Trigger
							Property="IsEnabled"
							Value="False">
                            <Setter
								Property="TextElement.Foreground"
								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>



            </Setter.Value>
        </Setter>
    </Style>

    <!-- BACK BUTTON -->
    <Style x:Key="BackArrow" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Viewbox>
                            <Grid>
                                <Path x:Name="arrowTop" Width="262" Height="198" Canvas.Left="45" Canvas.Top="70"
									Stretch="Fill" StrokeThickness="6" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
									StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}"
									Data="F1 M 48.5143,170L 144.514,73.9999L 195.514,74L 121.515,150L 304.514,150L 304.514,190L 121.514,190L 195.514,266L 144.514,266L 48.5143,170 Z " RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="arrow" Width="262" Height="198" Canvas.Left="45" Canvas.Top="70"
									Stretch="Fill" StrokeThickness="6" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
									StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}"
									Data="F1 M 48.5143,170L 144.514,73.9999L 195.514,74L 121.515,150L 304.514,150L 304.514,190L 121.514,190L 195.514,266L 144.514,266L 48.5143,170 Z " RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Ellipse x:Name="ellipse" Width="340" Height="340" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="15" StrokeLineJoin="Round" Opacity=".6" Stroke="{TemplateBinding Foreground}" Fill="#00000000" />
                            </Grid>
                        </Viewbox>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ellipse" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".75" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="arrow" Property="Effect">
                                <Setter.Value>
                                    <BlurEffect Radius="30" RenderingBias="Quality" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Alternate BACK BUTTON with gray out on IsEnabled=False -->
    <Style x:Key="arrowBackwithGrayOut" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Viewbox>
                            <Grid>
                                <Path x:Name="arrowTop" Width="262" Height="198" Canvas.Left="45" Canvas.Top="70"
									Stretch="Fill" StrokeThickness="6" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
									StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}"
									Data="F1 M 48.5143,170L 144.514,73.9999L 195.514,74L 121.515,150L 304.514,150L 304.514,190L 121.514,190L 195.514,266L 144.514,266L 48.5143,170 Z " RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Path x:Name="arrow" Width="262" Height="198" Canvas.Left="45" Canvas.Top="70"
									Stretch="Fill" StrokeThickness="6" StrokeStartLineCap="Round" StrokeEndLineCap="Round"
									StrokeLineJoin="Round" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}"
									Data="F1 M 48.5143,170L 144.514,73.9999L 195.514,74L 121.515,150L 304.514,150L 304.514,190L 121.514,190L 195.514,266L 144.514,266L 48.5143,170 Z " RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.7" ScaleY="0.7" />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <Ellipse x:Name="ellipse" Width="340" Height="340" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="15" StrokeLineJoin="Round" Opacity=".6" Stroke="{TemplateBinding Foreground}" Fill="#00000000" />
                            </Grid>
                        </Viewbox>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ellipse" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".75" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="arrow" Property="Effect">
                                <Setter.Value>
                                    <BlurEffect Radius="30" RenderingBias="Quality" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource LightBorderBrush}" />
                            <Setter TargetName="arrowTop" Property="Stroke" Value="{StaticResource LightBorderBrush}" />
                            <Setter TargetName="arrow" Property="Fill" Value="{StaticResource LightBorderBrush}" />
                            <Setter TargetName="arrowTop" Property="Fill" Value="{StaticResource LightBorderBrush}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{StaticResource LightBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Progress Bar-->
    <Style x:Key="{x:Type ProgressBar}"
		TargetType="{x:Type ProgressBar}">
        <Setter Property="IsIndeterminate"
			Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True">
                        <Rectangle RadiusX="2" RadiusY="2" Fill="Transparent" />
                        <Border CornerRadius="0,0,0,0" Margin="1,1,1,1" Background="#FFDEDEDE"/>
                        <Border BorderThickness="0,0,0,0" BorderBrush="Transparent" Margin="1,1,1,1" Background="Transparent"/>
                        <Rectangle x:Name="PART_Track" Margin="1,1,1,1" Fill="#FFA0A0A0" />
                        <Decorator x:Name="PART_Indicator" Margin="1,1,1,1" HorizontalAlignment="Left">
                            <Grid x:Name="Foreground">
                                <Rectangle Fill="Transparent" x:Name="Indicator" />
                                <Grid x:Name="Animation" ClipToBounds="True">
                                    <Border x:Name="PART_GlowRect" Margin="0,0,0,0" HorizontalAlignment="Stretch" Background="LightBlue" />
                                </Grid>
                                <Grid x:Name="Overlay"/>
                            </Grid>
                        </Decorator>
                        <Border BorderThickness="0" CornerRadius="0,0,0,0" BorderBrush="Transparent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TODO: Add a drop shadow-->
    <!-- TODO: TopLevel Selected Background-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
        <!--<Setter Property="Foreground" Value="White"/>-->
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="2,3"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="2,3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource SquareButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#004A7F" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <Style x:Key="OverviewButtonStyle"
        BasedOn="{StaticResource SquareButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#217BCB" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>
    

    <Style x:Key="LightButtonStyle"
           BasedOn="{StaticResource SquareButtonStyle}"
           TargetType="{x:Type Button}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{x:Null}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                                   Content="{TemplateBinding Content}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   Margin="{TemplateBinding Padding}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#eee" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#F57D0B" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="TransparentBrush" Opacity="0" Color="{DynamicResource WhiteColor}" />

    <Style x:Key="SquareButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="Background"
                Value="{DynamicResource TransparentBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused" />
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{x:Null}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{DynamicResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                                   Content="{TemplateBinding Content}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   Margin="{TemplateBinding Padding}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource BlackBrush}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#4D4D4D" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>